name: 'Steps to deploy'
description: 'Steps to deploy'
inputs:
  REGISTRY_NAME:
    required: true
  CLUSTER_NAME:
    required: true
  CLUSTER_RESOURCE_GROUP:
    required: true
  NAMESPACE:
    required: true
  SECRET:
    required: true
  APP_NAME:
    required: true
  BUILD_FILE:
    required: true
runs:
  using: "composite"
  steps:  
  # Connect to Azure Container registry (ACR)
  - uses: azure/docker-login@v1
    with:
      login-server: ${{ inputs.REGISTRY_NAME }}.azurecr.io
      username: ${{ secrets.REGISTRY_USERNAME }} 
      password: ${{ secrets.REGISTRY_PASSWORD }}
  
  # Container build and push to a Azure Container registry (ACR)
  - run: |
      docker build ${{ inputs.BUILD_FILE }} -t ${{ inputs.REGISTRY_NAME }}.azurecr.io/${{ inputs.APP_NAME }}:${{ github.sha }}
      docker push ${{ inputs.REGISTRY_NAME }}.azurecr.io/${{ inputs.APP_NAME }}:${{ github.sha }}
  
  # Set the target Azure Kubernetes Service (AKS) cluster. 
  - uses: azure/aks-set-context@v1
    with:
      creds: '${{ secrets.AZURE_CREDENTIALS }}'
      cluster-name: ${{ inputs.CLUSTER_NAME }}
      resource-group: ${{ inputs.CLUSTER_RESOURCE_GROUP }}
  
  # Create namespace if doesn't exist
  - run: |
      kubectl create namespace ${{ inputs.NAMESPACE }} --dry-run -o json | kubectl apply -f -
  
  # Create image pull secret for ACR
  - uses: azure/k8s-create-secret@v1
    with:
      container-registry-url: ${{ inputs.REGISTRY_NAME }}.azurecr.io
      container-registry-username: ${{ secrets.REGISTRY_USERNAME }}
      container-registry-password: ${{ secrets.REGISTRY_PASSWORD }}
      secret-name: ${{ inputs.SECRET }}
      namespace: ${{ inputs.NAMESPACE }}
      force: true
  
  # Deploy app to AKS
  - uses: azure/k8s-deploy@v1
    with:
      manifests: |
        manifests/deployment.yml
        manifests/service.yml
      images: |
        ${{ inputs.REGISTRY_NAME }}.azurecr.io/${{ inputs.APP_NAME }}:${{ github.sha }}
      imagepullsecrets: |
        ${{ inputs.SECRET }}
      namespace: ${{ inputs.NAMESPACE }}